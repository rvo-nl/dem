let maxTimelineWidth,daysPerMonth,timelineUnitPerHour,currentMonth = 'januari',speed = 200
var timelinePosition = 0,lowerMonthBound = 0,upperMonthBound = 744,currentWeek = 0,dayCount = 0,monitorMonthFlip = 0
let playButtonWidth = 70,flagYearMonthWeekSwitch = !1
function drawTimeline () {return new Promise((t => {
    d3.select('#timelineSVG').remove();maxTimelineWidth = document.querySelector('#timeline').offsetWidth, d3.select('#timeline').style('width', maxTimelineWidth + 'px').append('svg').attr('id', 'timelineSVG').style('position', 'relative').style('width', maxTimelineWidth + 'px').style('height', '65px').style('background-color', 'none');let e = d3.select('#timelineSVG').append('g')
    daysPerMonth = {januari: {dagen: 31,cumulatief: 0},februari: {dagen: 28,cumulatief: 31},maart: {dagen: 31,cumulatief: 59},april: {dagen: 30,cumulatief: 90},mei: {dagen: 31,cumulatief: 120},juni: {dagen: 30,cumulatief: 151},juli: {dagen: 31,cumulatief: 181},augustus: {dagen: 31,cumulatief: 212},september: {dagen: 30,cumulatief: 243},oktober: {dagen: 31,cumulatief: 273},november: {dagen: 30,cumulatief: 304},december: {dagen: 31,cumulatief: 334}};let n = daysPerMonth.januari.dagen + daysPerMonth.februari.dagen + daysPerMonth.maart.dagen + daysPerMonth.april.dagen + daysPerMonth.mei.dagen + daysPerMonth.juni.dagen + daysPerMonth.juli.dagen + daysPerMonth.augustus.dagen + daysPerMonth.september.dagen + daysPerMonth.oktober.dagen + daysPerMonth.november.dagen + daysPerMonth.december.dagen
    timelineUnitPerHour = (maxTimelineWidth - playButtonWidth) / (24 * n), e.append('rect').attr('fill', '#FFF').attr('x', playButtonWidth).attr('y', 0).attr('width', maxTimelineWidth - playButtonWidth).attr('height', 65), e.append('rect').attr('x', playButtonWidth).attr('y', 0).style('opacity', .2).attr('fill', '#265A8B').attr('id', 'timelineHours').attr('width', 0).attr('height', 65);let r = playButtonWidth
    for (i = 0;i < Object.keys(daysPerMonth).length;i++)e.append('rect').attr('fill', '#154273').style('opacity', (function () {return 0 == i ? 0 : .8})).attr('width', 2).attr('y', 10).attr('height', 50).attr('x', (function () {return 0 == i || (r += 24 * daysPerMonth[Object.keys(daysPerMonth)[i - 1]].dagen * timelineUnitPerHour), r})), e.append('text').attr('id', 'timelineMonth_' + Object.keys(daysPerMonth)[i]).attr('y', 28).attr('fill', '#154273').style('text-anchor', 'start').text(Object.keys(daysPerMonth)[i]).attr('x', (function () {return i, r + 10})), e.append('text').attr('id', 'timelineMonthDay_' + Object.keys(daysPerMonth)[i]).style('font-size', '25px').attr('y', 28).attr('fill', '#154273').style('text-anchor', 'start').style('visibility', 'hidden').text('88').attr('x', (function () {return i, r + 10}));document.querySelector('#timelineSVG').addEventListener('mouseover', (function (t) {d3.select('#timelineSelectionCursor').style('visibility', 'visible')})), document.querySelector('#timelineSVG').addEventListener('mousemove', (function (t) {d3.select('#timelineSelectionCursor').attr('x', t.x - document.getElementById('timeline').getBoundingClientRect().left)})), document.querySelector('#timelineSVG').addEventListener('mouseout', (function (t) {d3.select('#timelineSelectionCursor').style('visibility', 'hidden')})), e.append('rect').attr('id', 'timelineSelectionCursor').attr('fill', '#333').attr('x', 20).attr('y', 0).attr('width', 2).attr('height', 65).style('visibility', 'hidden'), e.append('rect').attr('id', 'timelinePositionCursor').attr('fill', '#9F264E').style('opacity', .5).attr('x', 20).attr('y', 0).attr('width', 3).attr('height', 65), e.append('rect').attr('id', 'playButton').attr('fill', '#546689').attr('width', 70).attr('x', 0).attr('height', 65).style('pointer-events', 'all').on('mouseover', (function () {d3.select('#playButton').attr('fill', '#607292')})).on('mouseout', (function () {d3.select('#playButton').attr('fill', '#546689')}));e.append('path').attr('id', 'playButtonIcon').attr('d', 'M18,18H6V6H18V18').attr('fill', 'white').attr('transform', 'translate(15,12)scale(1.6)').style('pointer-events', 'none'), document.querySelector('#timelineSVG').addEventListener('mousedown', (function (t) {
      Math.round((t.x - 0 - playButtonWidth - document.getElementById('timeline').getBoundingClientRect().left) / (document.querySelector('#timeline').offsetWidth - playButtonWidth) * 8760) >= 0 ? (timelinePosition = Math.round((t.x - 0 - playButtonWidth - document.getElementById('timeline').getBoundingClientRect().left) / (document.querySelector('#timeline').offsetWidth - playButtonWidth) * 8760), 'paused' === playState && (timelinePosition -= 1, tick())) : 'running' === playState ? (playState = 'paused', clearInterval(loop), d3.select('#playButtonIcon').attr('d', 'M8,5.14V19.14L19,12.14L8,5.14Z')) : (d3.select('#playButtonIcon').attr('d', 'M18,18H6V6H18V18Z'), playState = 'running', clearInterval(loop), startPlaying())})), t()}))}function updateTimeline (t) { for (d3.select('#timelineHours').attr('width', (function () {return t * timelineUnitPerHour})), d3.select(`#timelineMonthDay_${e(t).month}`).text(e(t).day), d3.select('#timelinePositionCursor').attr('x', timelinePosition * timelineUnitPerHour + playButtonWidth), i = 0;i < 12;i++)d3.select(`#timelineMonthDay_${Object.keys(daysPerMonth)[i]}`).style('visibility', 'hidden'), d3.select(`#timelineMonth_${Object.keys(daysPerMonth)[i]}`).attr('y', 28);function e (t) {if (t < 1 || t > 8760)return 'Invalid hour of the year';const e = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],i = [null, 'januari', 'februari', 'maart', 'april', 'mei', 'juni', 'juli', 'augustus', 'september', 'oktober', 'november', 'december']
    let n = 0,r = 1
    for (;r <= 12;) {const o = 24 * e[r]
      if (n + o >= t) {const e = Math.ceil((t - n) / 24)
        return {month: i[r],day: e}}n += o, r++}return 'Invalid hour of the year'}d3.select(`#timelineMonthDay_${e(t).month}`).style('visibility', 'visible'), d3.select(`#timelineMonth_${e(t).month}`).attr('y', 50)}let hourCount = 0
function updateClock (t) {d3.select('#clockPosition').text(t)}function resizeTimeline () {drawTimeline()}function tick () { for (g = 0;g < Object.keys(updateTransmissionGridViews).length;g++) {let r = Object.keys(updateTransmissionGridViews)[g],o = updateTransmissionGridViews[r]
    for (i = 0;i < o.length;i++) for (i = 0;i < o.length;i++) {let t = '#capacitiesText_' + o[i].indicator
        t = t.replace(/\s/g, '');let e = o[i]['consumption.node'],n = o[i]['production.node'],r = timeseriesLib[timelinePosition][o[i].indicator + '_production'],a = 0
        if ('A' == o[i].order) { for (k = 0;k < o.length;k++)'B' == o[k].order && o[k]['consumption.node'] == n && o[k]['production.node'] == e && (secondaryConsumptionValue = timeseriesLib[timelinePosition][o[k].indicator + '_consommation'], a = timeseriesLib[timelinePosition][o[k].indicator + '_production']);let i = parseInt(r) + parseInt(a)
          d3.select(t).text(100 * Math.round(i / 100))}} for (i = 0;i < o.length;i++) {let a = o[i]['consumption.node'],l = o[i]['production.node'],s = (timeseriesLib[timelinePosition][o[i].indicator + '_consommation'], timeseriesLib[timelinePosition][o[i].indicator + '_production']),d = 0
      if ('A' == o[i].order) { for (k = 0;k < o.length;k++)'B' == o[k].order && o[k]['consumption.node'] == l && o[k]['production.node'] == a && (secondaryConsumptionValue = timeseriesLib[timelinePosition][o[k].indicator + '_consommation'], d = timeseriesLib[timelinePosition][o[k].indicator + '_production']);t = (t = '#trns_' + r + '_' + o[i].indicator).replace(/\s/g, '');var t,e = 150,n = parseInt(s) + parseInt(d)
        d3.select(t).attr('stroke-dashoffset', offsetTracker).style('stroke-width', (function () {return e = parseFloat(document.querySelector(t).getAttribute('data-gridScale')), n / e > .5 ? n / e : 1})).transition().duration(200).ease(d3.easeLinear), t = (t = '#trnsCircles_' + r + '_' + o[i].indicator).replace(/\s/g, '');e = 150, n = parseInt(s) + parseInt(d)}}} for (cnt = 0;cnt < updateAssetBubbleIDs_Netten_precursor.length;cnt++) {let t = updateAssetBubbleIDs_Netten_precursor[cnt].twowayIndicators[0],e = updateAssetBubbleIDs_Netten_precursor[cnt].twowayIndicators[1]
    var r = parseInt(timeseriesLib[timelinePosition][t]) + parseInt(timeseriesLib[timelinePosition][e]),o = parseInt(updateAssetBubbleIDs_Netten_precursor[cnt].pmax)
    altdata = {a: r,b: o - r}, d3.selectAll('#donutChartElement_' + cnt).data(d3.pie(d3.entries(altdata)).value((function (t) {return t.value})).sort(null)(d3.entries(altdata))).transition().duration(speed - 10).attrTween('d', (function (t) {this._current = this._current || t;var e = d3.interpolate(this._current, t)
      return this._current = e(0), function (t) {return d3.arc().outerRadius(13).innerRadius(8)(e(t))}}))} for (cnt = 0;cnt < updateAssetBubbleIDs_ready.length;cnt++) {let t = parseFloat(timeseriesLib[timelinePosition][updateAssetBubbleIDs_ready[cnt].indicator])
    altdata = {a: parseInt(t),b: parseInt(parseFloat(updateAssetBubbleIDs_ready[cnt].maxvalue) - t)}, d3.selectAll('.donutSupply_' + cnt).data(d3.pie(d3.entries(altdata)).value((function (t) {return t.value})).sort(null)(d3.entries(altdata))).transition().duration(speed - 10).attrTween('d', (function (t) {this._current = this._current || t;var e = d3.interpolate(this._current, t)
      return this._current = e(0), function (t) {return d3.arc().outerRadius(parseFloat(this.getAttribute('data-radius')) + 1).innerRadius(parseFloat(this.getAttribute('data-radius')) + 3)(e(t))}}))}updateDynamicSankey(JSON.stringify(obj)), updateTimeline(timelinePosition), 'undefined' != timeseriesLib && updateClock(timeseriesLib[timelinePosition].timeseries.substring(11).substring(0, 5));let a,l
  for (j = 0;j < d3.selectAll('.indicatorLevel')._groups[0].length;j++) {let t,e = d3.selectAll('.indicatorLevel')._groups[0][j].id,i = e.replaceAll('_ABC', ' ').substring(15)
    i = i.replaceAll('_POINT', '.'), t = parseFloat(timeseriesLib[timelinePosition][i]), setHeight = t / window['yscale_graph' + j] * 175, d3.select('#' + e).transition().duration(speed).attr('height', setHeight).attr('y', 175 - setHeight + 51)}if ('Year' == graphViewMode ? a = (window.innerWidth - 10 - 200 + 40) * (timelinePosition / 8750) + 150 : 'Month' != graphViewMode && 'Week' != graphViewMode || (a = (window.innerWidth - 10 - 200 + 40) * ((timelinePosition - lowerMonthBound - 1) / (upperMonthBound - lowerMonthBound)) + 150), l = document.querySelectorAll('.graphCursor'), 'Year' == graphViewMode) for (i = 0;i < l.length;i++) {let t = l[i].ownerSVGElement.id
      if (document.querySelector('#' + t + '> g:nth-child(1) > g:nth-child(2) > path')) {let e = 0,n = 0
        if (null != document.querySelector('#' + t + '> g:nth-child(1) > g:nth-child(1) > path') && (e = document.querySelector('#' + t + '> g:nth-child(1) > g:nth-child(2) > path').getBBox().width, n = document.querySelector('#' + t + '> g:nth-child(1) > g:nth-child(2)').getBBox().x), d3.select(l[i]).attr('x', timelinePosition / 8750 * e + n), null != l[i].getAttribute('id') && 'graphIndicatorValue' == l[i].getAttribute('id').slice(0, 19)) {parseInt(timeseriesLib[timelinePosition][l[i].getAttribute('id').substring(20)]);d3.select(l[i]).html(counterToHour(timelinePosition) + ':00 &nbsp')}}}
  else if ('Month' == graphViewMode || 'Week' == graphViewMode) for (i = 0;i < l.length;i++) {let t = l[i].ownerSVGElement.id
      if (document.querySelector('#' + t + '> g:nth-child(1) > g:nth-child(2) > path')) {let e = document.querySelector('#' + t + '> g:nth-child(1) > g:nth-child(2) > path').getBBox().width,n = document.querySelector('#' + t + '> g:nth-child(1) > g:nth-child(2)').getBBox().x,r = (timelinePosition - lowerMonthBound) / (upperMonthBound - lowerMonthBound) * e + n
        if (d3.select(l[i]).attr('x', r), null != l[i].getAttribute('id') && 'graphIndicatorValue' == l[i].getAttribute('id').slice(0, 19)) {parseInt(timeseriesLib[timelinePosition][l[i].getAttribute('id').substring(20)]);d3.select(l[i]).html(counterToHour(timelinePosition) + ':00 &nbsp')}}}const s = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],d = 24
  if (timelinePosition < 8750) {let t = 0,e = 0
    for (;timelinePosition >= e + s[t] * d;)e += s[t] * d, t++, t === s.length && (t = 0);if ('Month' === graphViewMode && (lowerMonthBound = e + 1, upperMonthBound = e + s[t] * d), 'Week' === graphViewMode) {const t = Math.floor(timelinePosition / 168)
      lowerMonthBound = 7 * t * d + 1, upperMonthBound = 7 * (t + 1) * d}timelinePosition++}else timelinePosition = 0;if (monitorMonthFlip != lowerMonthBound || flagYearMonthWeekSwitch) { for (flagYearMonthWeekSwitch = !1, j = 0;j < updateGraphViews.length;j++)null != document.getElementById(updateGraphViews[j].targetDiv) && (document.getElementById(updateGraphViews[j].targetDiv).innerHTML = '', 'stackGraph' == updateGraphViews[j].caller ? drawStackGraph(updateGraphViews[j].config) : 'residualLoadDurationCurve' == updateGraphViews[j].caller ? drawResidualLoadDurationCurve(updateGraphViews[j].config) : drawAreaGraph({indicator: updateGraphViews[j].indicator,targetDiv: updateGraphViews[j].targetDiv,color: updateGraphViews[j].color}));monitorMonthFlip = lowerMonthBound}if (d3.select('#clockHour').text(counterToHour(timelinePosition) + ':00'), 'uurbasis' === viewMode && 'undefined' != typeof sankeyData) { for (i = 0;i < sankeyData.links.length;i++)sankeyData.links[i].value = timeseriesLib[timelinePosition][sankeyData.links[i].hook] / sankeyfyConfig.settings[0].scaleDataValue_uurbasis;updateDynamicSankey(JSON.stringify(sankeyData), sankeyfyConfig.settings[0].offsetX, sankeyfyConfig.settings[0].offsetY, sankeyfyConfig.settings[0].fontSize, sankeyfyConfig.settings[0].font), d3.selectAll('.node-title').style('font-size', '30px')}}function initPlayer () {offsetTracker = 0, 'running' === playState ? startPlaying() : (playState = 'paused', timelinePosition -= 1, tick())}function startPlaying () {loop = setInterval((function () {tick()}), speed)}function counterToHour (t) {if (t < 1 || t > 8760)return '--';const e = (t - 1) % 24
  return e < 10 ? `0${e}` : `${e}`}function wrap (t, e) {t.each((function () {var t,i = d3.select(this),n = i.text().split(/\s+/).reverse(),r = [],o = 0,a = i.attr('y'),l = parseFloat(i.attr('dy'))
    isNaN(l) && (l = 0); for (var s = i.text(null).append('tspan').attr('x', 10).attr('y', a).attr('dy', l + 'em');t = n.pop();)r.push(t), s.text(r.join(' ')), s.node().getComputedTextLength() > e && (r.pop(), s.text(r.join(' ')), r = [t], s = i.append('tspan').attr('x', 10).attr('y', 0).attr('dy', 1.8 * ++o + l + 'em').text(t))}))}d3.select(window).on('resize.body', (function () {resizeTimeline()})), d3.select('#playButton').on('click', (function () {
  'running' === playState ? (playState = 'paused', clearInterval(loop), d3.select('#playButtonIcon').attr('d', 'M8,5.14V19.14L19,12.14L8,5.14Z')) : (d3.select('#playButtonIcon').attr('d', 'M18,18H6V6H18V18Z'), playState = 'running', clearInterval(loop), startPlaying())}))
